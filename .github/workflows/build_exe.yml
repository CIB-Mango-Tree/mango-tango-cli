name: Build Executables

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-?*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform:
          # - windows
          - macos-14
        include:
          - platform: windows
            os: windows-2022
            move_command: move dist\mangotango.exe dist\mangotango_windows.exe
            sha_command: pwsh -c "Get-FileHash -Algorithm SHA1 dist\mangotango_windows.exe | Format-Table Hash -HideTableHeaders > dist\mangotango_windows.exe.sha1"
            list_command: dir dist
          - platform: macos-14
            os: macos-14
            move_command: mv dist/mangotango dist/mangotango_macos_14
            sha_command: shasum -a 1 dist/mangotango_macos_14 > dist/mangotango_macos_14.sha1
            list_command: ls -ll dist

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ matrix.platform }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ matrix.platform }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build the executable
        run: |
          pyinstaller pyinstaller.spec

      - name: Rename the executable to include platform suffix
        run: ${{ matrix.move_command }}

      - name: Compute the SHA1 hashsum
        run: ${{ matrix.sha_command }}

      - name: Inspect the dist/ directory before uploading artifacts
        run: ${{ matrix.list_command }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}
          path: |
            dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
